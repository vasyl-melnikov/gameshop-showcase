"""Init generation

Revision ID: cc39aee8ee17
Revises: 
Create Date: 2024-11-27 00:43:20.088145

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "cc39aee8ee17"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "game_accounts",
        sa.Column("steam_id_64", sa.BigInteger(), autoincrement=False, nullable=False),
        sa.Column("email", sa.VARCHAR(length=128), nullable=False),
        sa.Column("account_name", sa.VARCHAR(length=128), nullable=False),
        sa.Column("password", sa.VARCHAR(length=512), nullable=False),
        sa.PrimaryKeyConstraint("steam_id_64"),
        sa.UniqueConstraint("account_name"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "games",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(length=128), nullable=False),
        sa.Column("genre", sa.VARCHAR(length=32), nullable=True),
        sa.Column("release_date", sa.Date(), nullable=True),
        sa.Column("date_created", sa.DateTime(), nullable=False),
        sa.Column("description", sa.VARCHAR(length=2000), nullable=False),
        sa.Column("price", sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("ukey", sa.VARCHAR(length=12), nullable=False),
        sa.Column("first_name", sa.VARCHAR(length=50), nullable=True),
        sa.Column("last_name", sa.VARCHAR(length=50), nullable=True),
        sa.Column("username", sa.VARCHAR(length=50), nullable=True),
        sa.Column("email", sa.VARCHAR(length=320), nullable=False),
        sa.Column("hashed_password", sa.VARCHAR(length=60), nullable=True),
        sa.Column("mfa_enabled", sa.Boolean(), nullable=False),
        sa.Column(
            "role",
            sa.Enum(
                "PARTIALLY_LOGGED_IN",
                "USER",
                "SUPPORT_MODERATOR",
                "ADMIN",
                "ROOT_ADMIN",
                name="roles",
            ),
            nullable=False,
        ),
        sa.Column("temporary", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("ukey"),
    )
    op.create_table(
        "game_account_games",
        sa.Column("account_id", sa.BigInteger(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("available_status", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["game_accounts.steam_id_64"],
        ),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.PrimaryKeyConstraint("account_id", "game_id"),
    )
    op.create_table(
        "game_change_requests",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("changes", sa.JSON(), nullable=False),
        sa.Column(
            "status",
            sa.Enum("APPROVED", "PENDING", "REJECTED", name="gamechangerequeststatus"),
            nullable=False,
        ),
        sa.Column("moderator_id", sa.Integer(), nullable=False),
        sa.Column("request_date", sa.DateTime(), nullable=False),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["moderator_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.BigInteger(), nullable=False),
        sa.Column("total_price", sa.DECIMAL(precision=10, scale=2), nullable=False),
        sa.Column("order_date", sa.DateTime(), nullable=False),
        sa.Column("receipt_url", sa.VARCHAR(length=255), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["game_accounts.steam_id_64"],
        ),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "rentals",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.BigInteger(), nullable=False),
        sa.Column("game_id", sa.Integer(), nullable=False),
        sa.Column("rental_date", sa.DateTime(), nullable=False),
        sa.Column("return_date", sa.DateTime(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "PENDING", "CANCELED", name="rentalstatus"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["game_accounts.steam_id_64"],
        ),
        sa.ForeignKeyConstraint(
            ["game_id"],
            ["games.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rentals")
    op.drop_table("orders")
    op.drop_table("game_change_requests")
    op.drop_table("game_account_games")
    op.drop_table("users")
    op.drop_table("games")
    op.drop_table("game_accounts")
    # ### end Alembic commands ###
